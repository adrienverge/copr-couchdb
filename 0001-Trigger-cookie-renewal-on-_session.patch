From 99c9bdbcf0210379727c01259ab0ff5d6c9280b1 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Adrien=20Verg=C3=A9?= <adrienverge@gmail.com>
Date: Fri, 2 Sep 2016 12:42:19 +0200
Subject: [PATCH] Trigger cookie renewal on /_session

It is currently not possible to programmatically renew an `AuthSession`
cookie. The only way is to wait 10% of the cookie expiration time then
make any request to CouchDB, so it sends a new cookie.

Programmatically getting cookies can be needed, for example, when
passwords are managed by authentication server. E.g., a third-party auth
server gets a cookie, forwards it to a user, and the user needs the
CouchDB server to install a new cookie in his/her browser with a
`Set-Cookie` header. (Browsers don't allow JS to install cookies, only a
`Set-Cookie` header from the server can set the cookie.)

This patch brings the following change: an already-authenticated request
(either POST or GET) on `/_session` will trigger the creation of a new
cookie, whatever we're inside the 10% timeout window or not.

This way, applications can programmatically get a cookie without having
to wait 60 seconds.

This closes: COUCHDB-3125
---
 src/couch/src/couch_httpd_auth.erl | 20 +++++++++++++++-----
 1 file changed, 15 insertions(+), 5 deletions(-)

diff --git a/src/couch/src/couch_httpd_auth.erl b/src/couch/src/couch_httpd_auth.erl
index 15d3ac6..4e88b64 100644
--- a/src/couch/src/couch_httpd_auth.erl
+++ b/src/couch/src/couch_httpd_auth.erl
@@ -223,13 +223,15 @@ cookie_authentication_handler(#httpd{mochi_req=MochiReq}=Req, AuthModule) ->
                     TimeStamp when CurrentTime < TimeStamp + Timeout ->
                         case couch_passwords:verify(ExpectedHash, Hash) of
                             true ->
-                                TimeLeft = TimeStamp + Timeout - CurrentTime,
                                 couch_log:debug("Successful cookie auth as: ~p",
                                                 [User]),
+                                TimeLeft = TimeStamp + Timeout - CurrentTime,
+                                IssueNewCookie = maybe_issue_new_cookie(
+                                    MochiReq, TimeLeft, Timeout),
                                 Req#httpd{user_ctx=#user_ctx{
                                     name=?l2b(User),
                                     roles=couch_util:get_value(<<"roles">>, UserProps, [])
-                                }, auth={FullSecret, TimeLeft < Timeout*0.9}};
+                                }, auth={FullSecret, IssueNewCookie}};
                             _Else ->
                                 Req
                         end;
@@ -240,13 +242,21 @@ cookie_authentication_handler(#httpd{mochi_req=MochiReq}=Req, AuthModule) ->
         end
     end.
 
+maybe_issue_new_cookie(MochiReq, TimeLeft, Timeout) ->
+    {VPath, _Query, _Fragment} = mochiweb_util:urlsplit_path(MochiReq:get(raw_path)),
+    case VPath of
+        "/_session" -> true;
+        _Else -> TimeLeft < Timeout*0.9
+    end.
+
 cookie_auth_header(#httpd{user_ctx=#user_ctx{name=null}}, _Headers) -> [];
 cookie_auth_header(#httpd{user_ctx=#user_ctx{name=User}, auth={Secret, true}}=Req, Headers) ->
     % Note: we only set the AuthSession cookie if:
     %  * a valid AuthSession cookie has been received
-    %  * we are outside a 10% timeout window
-    %  * and if an AuthSession cookie hasn't already been set e.g. by a login
-    %    or logout handler.
+    %  * if an AuthSession cookie hasn't already been set e.g. by a login
+    %    or logout handler
+    %  * either we are outside a 10% timeout window, or the client makes a
+    %    request to /_session to force cookie renewal
     % The login and logout handlers need to set the AuthSession cookie
     % themselves.
     CookieHeader = couch_util:get_value("Set-Cookie", Headers, ""),
-- 
2.7.4

